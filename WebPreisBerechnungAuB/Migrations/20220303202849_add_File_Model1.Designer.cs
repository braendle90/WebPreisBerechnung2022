// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebPreisBerechnungAuB.Data;

namespace WebPreisBerechnungAuB.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220303202849_add_File_Model1")]
    partial class add_File_Model1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("WebPreisBerechnungAuB.Models.ApplicationTransfer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ApplicationPrice")
                        .HasColumnType("float");

                    b.Property<int>("From")
                        .HasColumnType("int");

                    b.Property<int>("PiecesFrom")
                        .HasColumnType("int");

                    b.Property<int>("PiecesTo")
                        .HasColumnType("int");

                    b.Property<int>("To")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ApplicationTransfer");
                });

            modelBuilder.Entity("WebPreisBerechnungAuB.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("WebPreisBerechnungAuB.Models.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfColors")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Colors");
                });

            modelBuilder.Entity("WebPreisBerechnungAuB.Models.ExtraCharge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChargeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ChargePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ChargeTyp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsSelected")
                        .HasColumnType("bit");

                    b.Property<bool>("isOneTimeCharge")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("ExtraCharge");
                });

            modelBuilder.Entity("WebPreisBerechnungAuB.Models.ExtraChargeList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ExtraChargeId")
                        .HasColumnType("int");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsSelected")
                        .HasColumnType("bit");

                    b.Property<int?>("LogoId")
                        .HasColumnType("int");

                    b.Property<int?>("PositionLogoId")
                        .HasColumnType("int");

                    b.Property<string>("idForToggle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ExtraChargeId");

                    b.HasIndex("LogoId");

                    b.HasIndex("PositionLogoId");

                    b.ToTable("ExtraChargeList");
                });

            modelBuilder.Entity("WebPreisBerechnungAuB.Models.File", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("WebPreisBerechnungAuB.Models.Logo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ColorId")
                        .HasColumnType("int");

                    b.Property<int?>("FileId")
                        .HasColumnType("int");

                    b.Property<string>("LogoName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("LogoPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double>("LogoSurfaceSize")
                        .HasColumnType("float");

                    b.Property<string>("OfferId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PricePerScreen")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double>("SurfaceHight")
                        .HasColumnType("float");

                    b.Property<double>("SurfaceWidht")
                        .HasColumnType("float");

                    b.Property<decimal>("TotalPriceScreenPrint")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalPriceTransfer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TransferLogoPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("isLogoStorage")
                        .HasColumnType("bit");

                    b.Property<bool>("isOld")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.HasIndex("FileId");

                    b.HasIndex("UserId");

                    b.ToTable("Logos");
                });

            modelBuilder.Entity("WebPreisBerechnungAuB.Models.LogoExtraCharge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("LogoExtraCharge");
                });

            modelBuilder.Entity("WebPreisBerechnungAuB.Models.Offer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsOrdered")
                        .HasColumnType("bit");

                    b.Property<string>("OfferId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfferName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Offers");
                });

            modelBuilder.Entity("WebPreisBerechnungAuB.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("NumberOfPieces")
                        .HasColumnType("int");

                    b.Property<string>("OfferId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PriceScreenPrint")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriceTransfer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TextilColorId")
                        .HasColumnType("int");

                    b.Property<int?>("TextilId")
                        .HasColumnType("int");

                    b.Property<bool>("isOrdered")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("TextilColorId");

                    b.HasIndex("TextilId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("WebPreisBerechnungAuB.Models.OrderPositionLogo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("UserId");

                    b.ToTable("OrderPositionLogos");
                });

            modelBuilder.Entity("WebPreisBerechnungAuB.Models.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PositionName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("WebPreisBerechnungAuB.Models.PositionLogo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("LogoId")
                        .HasColumnType("int");

                    b.Property<int?>("OrderPositionLogoId")
                        .HasColumnType("int");

                    b.Property<int?>("PositionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LogoId");

                    b.HasIndex("OrderPositionLogoId");

                    b.HasIndex("PositionId");

                    b.ToTable("PositionLogos");
                });

            modelBuilder.Entity("WebPreisBerechnungAuB.Models.PriceTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("NumberColorsId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("RangeId")
                        .HasColumnType("int");

                    b.Property<int?>("TexilId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NumberColorsId");

                    b.HasIndex("RangeId");

                    b.HasIndex("TexilId");

                    b.ToTable("PriceTable");
                });

            modelBuilder.Entity("WebPreisBerechnungAuB.Models.PriceTableTransfer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int?>("RangeLogoId")
                        .HasColumnType("int");

                    b.Property<int?>("TexilId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RangeLogoId");

                    b.HasIndex("TexilId");

                    b.ToTable("PriceTableTransfer");
                });

            modelBuilder.Entity("WebPreisBerechnungAuB.Models.RangeSurfaceSize", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RangeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("SurfaceSizeFrom")
                        .HasColumnType("float");

                    b.Property<double>("SurfaceSizeTo")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("RangeSurfaceSizes");
                });

            modelBuilder.Entity("WebPreisBerechnungAuB.Models.RangeTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RangeFrom")
                        .HasColumnType("int");

                    b.Property<string>("RangeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RangeTo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RangeTable");
                });

            modelBuilder.Entity("WebPreisBerechnungAuB.Models.Textil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TextilName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Textils");
                });

            modelBuilder.Entity("WebPreisBerechnungAuB.Models.TextilColor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsPriceHigher")
                        .HasColumnType("bit");

                    b.Property<string>("TextilColorName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TextilColors");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("WebPreisBerechnungAuB.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("WebPreisBerechnungAuB.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebPreisBerechnungAuB.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("WebPreisBerechnungAuB.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebPreisBerechnungAuB.Models.ExtraChargeList", b =>
                {
                    b.HasOne("WebPreisBerechnungAuB.Models.ExtraCharge", "ExtraCharge")
                        .WithMany()
                        .HasForeignKey("ExtraChargeId");

                    b.HasOne("WebPreisBerechnungAuB.Models.Logo", "Logo")
                        .WithMany()
                        .HasForeignKey("LogoId");

                    b.HasOne("WebPreisBerechnungAuB.Models.PositionLogo", null)
                        .WithMany("ExtraChargeLists")
                        .HasForeignKey("PositionLogoId");

                    b.Navigation("ExtraCharge");

                    b.Navigation("Logo");
                });

            modelBuilder.Entity("WebPreisBerechnungAuB.Models.Logo", b =>
                {
                    b.HasOne("WebPreisBerechnungAuB.Models.Color", "Color")
                        .WithMany()
                        .HasForeignKey("ColorId");

                    b.HasOne("WebPreisBerechnungAuB.Models.File", "File")
                        .WithMany()
                        .HasForeignKey("FileId");

                    b.HasOne("WebPreisBerechnungAuB.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Color");

                    b.Navigation("File");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebPreisBerechnungAuB.Models.Order", b =>
                {
                    b.HasOne("WebPreisBerechnungAuB.Models.TextilColor", "TextilColor")
                        .WithMany()
                        .HasForeignKey("TextilColorId");

                    b.HasOne("WebPreisBerechnungAuB.Models.Textil", "Textil")
                        .WithMany()
                        .HasForeignKey("TextilId");

                    b.Navigation("Textil");

                    b.Navigation("TextilColor");
                });

            modelBuilder.Entity("WebPreisBerechnungAuB.Models.OrderPositionLogo", b =>
                {
                    b.HasOne("WebPreisBerechnungAuB.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId");

                    b.HasOne("WebPreisBerechnungAuB.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Order");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebPreisBerechnungAuB.Models.PositionLogo", b =>
                {
                    b.HasOne("WebPreisBerechnungAuB.Models.Logo", "Logo")
                        .WithMany()
                        .HasForeignKey("LogoId");

                    b.HasOne("WebPreisBerechnungAuB.Models.OrderPositionLogo", "OrderPositionLogo")
                        .WithMany()
                        .HasForeignKey("OrderPositionLogoId");

                    b.HasOne("WebPreisBerechnungAuB.Models.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId");

                    b.Navigation("Logo");

                    b.Navigation("OrderPositionLogo");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("WebPreisBerechnungAuB.Models.PriceTable", b =>
                {
                    b.HasOne("WebPreisBerechnungAuB.Models.Color", "NumberColors")
                        .WithMany()
                        .HasForeignKey("NumberColorsId");

                    b.HasOne("WebPreisBerechnungAuB.Models.RangeTable", "Range")
                        .WithMany()
                        .HasForeignKey("RangeId");

                    b.HasOne("WebPreisBerechnungAuB.Models.Textil", "Texil")
                        .WithMany()
                        .HasForeignKey("TexilId");

                    b.Navigation("NumberColors");

                    b.Navigation("Range");

                    b.Navigation("Texil");
                });

            modelBuilder.Entity("WebPreisBerechnungAuB.Models.PriceTableTransfer", b =>
                {
                    b.HasOne("WebPreisBerechnungAuB.Models.RangeSurfaceSize", "RangeLogo")
                        .WithMany()
                        .HasForeignKey("RangeLogoId");

                    b.HasOne("WebPreisBerechnungAuB.Models.Textil", "Texil")
                        .WithMany()
                        .HasForeignKey("TexilId");

                    b.Navigation("RangeLogo");

                    b.Navigation("Texil");
                });

            modelBuilder.Entity("WebPreisBerechnungAuB.Models.PositionLogo", b =>
                {
                    b.Navigation("ExtraChargeLists");
                });
#pragma warning restore 612, 618
        }
    }
}
