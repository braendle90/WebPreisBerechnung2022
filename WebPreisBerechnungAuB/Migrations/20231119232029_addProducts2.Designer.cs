// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebPreisBerechnungAuB.Data;

#nullable disable

namespace WebPreisBerechnungAuB.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231119232029_addProducts2")]
    partial class addProducts2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("WebPreisBerechnungAuB.Models.ApplicationTransfer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ApplicationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ApplicationPrice")
                        .HasColumnType("float");

                    b.Property<int>("From")
                        .HasColumnType("int");

                    b.Property<int>("PiecesFrom")
                        .HasColumnType("int");

                    b.Property<int>("PiecesTo")
                        .HasColumnType("int");

                    b.Property<int>("To")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ApplicationTransfer");
                });

            modelBuilder.Entity("WebPreisBerechnungAuB.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("WebPreisBerechnungAuB.Models.ArticelMain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ArticelNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ArticelMain");
                });

            modelBuilder.Entity("WebPreisBerechnungAuB.Models.ArticleTextil", b =>
                {
                    b.Property<int>("ArticleNr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArticleNr"), 1L, 1);

                    b.Property<string>("ArtNrManufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CareInstruction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("CartonPrice")
                        .HasColumnType("float");

                    b.Property<string>("CatNrManufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CatalogNr")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("CatalogPageCorporateWear")
                        .HasColumnType("int");

                    b.Property<int?>("CatalogPagePromotion")
                        .HasColumnType("int");

                    b.Property<int?>("CatalogPageSportsWear")
                        .HasColumnType("int");

                    b.Property<int?>("CatalogPageTexStyles")
                        .HasColumnType("int");

                    b.Property<string>("CollarNeckline")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Collar_Neckline");

                    b.Property<string>("Collections")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("color1");

                    b.Property<string>("Color2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("color2");

                    b.Property<string>("Color3")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("color3");

                    b.Property<string>("Color4")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("color4");

                    b.Property<string>("Colourfulness")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Consistence")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryOfOrigin")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Cutting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DetailsBags")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Details_Bags");

                    b.Property<string>("DetailsBlanket")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Details_Blanket");

                    b.Property<string>("DetailsBlouses")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Details_Blouses");

                    b.Property<string>("DetailsBonnet")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Details_Bonnet");

                    b.Property<string>("DetailsButtons")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Details_Buttons");

                    b.Property<string>("DetailsCapLock")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Details_CapLock");

                    b.Property<string>("DetailsCapSpecial")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Details_CapSpecial");

                    b.Property<string>("DetailsCapType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Details_CapType");

                    b.Property<string>("DetailsCaps")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Details_Caps");

                    b.Property<string>("DetailsGlove")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Details_Glove");

                    b.Property<string>("DetailsHats")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Details_Hats");

                    b.Property<string>("DetailsJackets")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Details_Jackets");

                    b.Property<string>("DetailsPillow")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Details_Pillow");

                    b.Property<string>("DetailsPinafore")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Details_Pinafore");

                    b.Property<string>("DetailsPoloShirts")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Details_PoloShirts");

                    b.Property<string>("DetailsPullover")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Details_Pullover");

                    b.Property<string>("DetailsSaleshelper")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Details_Saleshelper");

                    b.Property<string>("DetailsScarfs")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Details_Scarfs");

                    b.Property<string>("DetailsShirt")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Details_Shirt");

                    b.Property<string>("DetailsShoes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Details_Shoes");

                    b.Property<string>("DetailsSkirts")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Details_Skirts");

                    b.Property<string>("DetailsSocks")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Details_Socks");

                    b.Property<string>("DetailsStuffedAnimals")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Details_StuffedAnimals");

                    b.Property<string>("DetailsSweatshirtsJackets")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Details_SweatshirtsJackets");

                    b.Property<string>("DetailsTies")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Details_Ties");

                    b.Property<string>("DetailsTowels")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Details_Towels");

                    b.Property<string>("DetailsTrousers")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Details_Trousers");

                    b.Property<string>("DetailsTshirts")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Details_TShirts");

                    b.Property<string>("DetailsUmbrellaHandle")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Details_UmbrellaHandle");

                    b.Property<string>("DetailsUmbrellas")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Details_Umbrellas");

                    b.Property<string>("DetailsUnderwear")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Details_Underwear");

                    b.Property<string>("DetailsVests")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Details_Vests");

                    b.Property<byte?>("Discontinued")
                        .HasColumnType("tinyint");

                    b.Property<string>("Ean")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EAN");

                    b.Property<double?>("Ek")
                        .HasColumnType("float")
                        .HasColumnName("EK");

                    b.Property<string>("Function")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Grammage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hexcol1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("hexcol1");

                    b.Property<string>("Hexcol2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("hexcol2");

                    b.Property<string>("Hexcol3")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("hexcol3");

                    b.Property<string>("Hexcol4")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("hexcol4");

                    b.Property<string>("Improving")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Legs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LongDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MakingCachet")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Making_Cachet");

                    b.Property<string>("Material")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mixture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartnerArticle")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Partner_Article");

                    b.Property<string>("PictureName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Product")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("QtyCarton")
                        .HasColumnType("bigint");

                    b.Property<string>("ShopNavigation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("SinglePrice")
                        .HasColumnType("float");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sleeve")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TariffNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Vk10001")
                        .HasColumnType("float")
                        .HasColumnName("VK_100_01");

                    b.Property<double?>("Vk10005")
                        .HasColumnType("float")
                        .HasColumnName("VK_100_05");

                    b.Property<double?>("Vk10006")
                        .HasColumnType("float")
                        .HasColumnName("VK_100_06");

                    b.Property<double?>("Vk11901")
                        .HasColumnType("float")
                        .HasColumnName("VK_119_01");

                    b.Property<double?>("Vk11905")
                        .HasColumnType("float")
                        .HasColumnName("VK_119_05");

                    b.Property<double?>("Vk11906")
                        .HasColumnType("float")
                        .HasColumnName("VK_119_06");

                    b.Property<double?>("Vk12001")
                        .HasColumnType("float")
                        .HasColumnName("VK_120_01");

                    b.Property<double?>("Vk12005")
                        .HasColumnType("float")
                        .HasColumnName("VK_120_05");

                    b.Property<double?>("Vk12006")
                        .HasColumnType("float")
                        .HasColumnName("VK_120_06");

                    b.Property<double?>("Vk12101")
                        .HasColumnType("float")
                        .HasColumnName("VK_121_01");

                    b.Property<double?>("Vk12105")
                        .HasColumnType("float")
                        .HasColumnName("VK_121_05");

                    b.Property<double?>("Vk12106")
                        .HasColumnType("float")
                        .HasColumnName("VK_121_06");

                    b.Property<double?>("VkBasis01")
                        .HasColumnType("float")
                        .HasColumnName("VK_BASIS_01");

                    b.Property<double?>("VkBasis05")
                        .HasColumnType("float")
                        .HasColumnName("VK_BASIS_05");

                    b.Property<double?>("VkBasis06")
                        .HasColumnType("float")
                        .HasColumnName("VK_BASIS_06");

                    b.Property<double?>("VkPlus01")
                        .HasColumnType("float")
                        .HasColumnName("VK_PLUS_01");

                    b.Property<double?>("VkPlus05")
                        .HasColumnType("float")
                        .HasColumnName("VK_PLUS_05");

                    b.Property<double?>("VkPlus06")
                        .HasColumnType("float")
                        .HasColumnName("VK_PLUS_06");

                    b.Property<double?>("Weight")
                        .HasColumnType("float");

                    b.Property<string>("Workmanship")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("_10cartonsPrice")
                        .HasColumnType("float")
                        .HasColumnName("_10CartonsPrice");

                    b.HasKey("ArticleNr");

                    b.ToTable("ArticleTextil");
                });

            modelBuilder.Entity("WebPreisBerechnungAuB.Models.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfColors")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Colors");
                });

            modelBuilder.Entity("WebPreisBerechnungAuB.Models.ExtraCharge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ChargeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ChargePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ChargeTyp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsSelected")
                        .HasColumnType("bit");

                    b.Property<bool>("isOneTimeCharge")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("ExtraCharge");
                });

            modelBuilder.Entity("WebPreisBerechnungAuB.Models.ExtraChargeList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ChargePieces")
                        .HasColumnType("int");

                    b.Property<decimal>("ChargePriceTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ExtraChargeId")
                        .HasColumnType("int");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsSelected")
                        .HasColumnType("bit");

                    b.Property<int?>("LogoId")
                        .HasColumnType("int");

                    b.Property<int?>("PositionLogoId")
                        .HasColumnType("int");

                    b.Property<string>("idForToggle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ExtraChargeId");

                    b.HasIndex("LogoId");

                    b.HasIndex("PositionLogoId");

                    b.ToTable("ExtraChargeList");
                });

            modelBuilder.Entity("WebPreisBerechnungAuB.Models.File", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ArticelMainId")
                        .HasColumnType("int");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArticelMainId");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("WebPreisBerechnungAuB.Models.Logo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ColorId")
                        .HasColumnType("int");

                    b.Property<int?>("FileId")
                        .HasColumnType("int");

                    b.Property<string>("LogoName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("LogoPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double>("LogoSurfaceSize")
                        .HasColumnType("float");

                    b.Property<string>("OfferId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PricePerScreen")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double>("SurfaceHight")
                        .HasColumnType("float");

                    b.Property<double>("SurfaceWidht")
                        .HasColumnType("float");

                    b.Property<decimal>("TotalPriceScreenPrint")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalPriceTransfer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TransferLogoPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("isLogoStorage")
                        .HasColumnType("bit");

                    b.Property<bool>("isOld")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.HasIndex("FileId");

                    b.HasIndex("UserId");

                    b.ToTable("Logos");
                });

            modelBuilder.Entity("WebPreisBerechnungAuB.Models.LogoExtraCharge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.HasKey("Id");

                    b.ToTable("LogoExtraCharge");
                });

            modelBuilder.Entity("WebPreisBerechnungAuB.Models.Offer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsOrdered")
                        .HasColumnType("bit");

                    b.Property<string>("OfferId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfferName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Offers");
                });

            modelBuilder.Entity("WebPreisBerechnungAuB.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("NumberOfPieces")
                        .HasColumnType("int");

                    b.Property<string>("OfferId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PriceScreenPrint")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriceTransfer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TextilColorId")
                        .HasColumnType("int");

                    b.Property<int?>("TextilId")
                        .HasColumnType("int");

                    b.Property<bool>("isOrdered")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("TextilColorId");

                    b.HasIndex("TextilId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("WebPreisBerechnungAuB.Models.OrderPositionLogo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("UserId");

                    b.ToTable("OrderPositionLogos");
                });

            modelBuilder.Entity("WebPreisBerechnungAuB.Models.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("PositionName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("WebPreisBerechnungAuB.Models.PositionLogo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("LogoId")
                        .HasColumnType("int");

                    b.Property<int?>("OrderPositionLogoId")
                        .HasColumnType("int");

                    b.Property<int?>("PositionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LogoId");

                    b.HasIndex("OrderPositionLogoId");

                    b.HasIndex("PositionId");

                    b.ToTable("PositionLogos");
                });

            modelBuilder.Entity("WebPreisBerechnungAuB.Models.PriceTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("NumberColorsId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriceUpdatePercent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("RangeId")
                        .HasColumnType("int");

                    b.Property<int?>("TexilId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NumberColorsId");

                    b.HasIndex("RangeId");

                    b.HasIndex("TexilId");

                    b.ToTable("PriceTable");
                });

            modelBuilder.Entity("WebPreisBerechnungAuB.Models.PriceTableTransfer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int?>("RangeLogoId")
                        .HasColumnType("int");

                    b.Property<int?>("TexilId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RangeLogoId");

                    b.HasIndex("TexilId");

                    b.ToTable("PriceTableTransfer");
                });

            modelBuilder.Entity("WebPreisBerechnungAuB.Models.Product", b =>
                {
                    b.Property<string>("ArticleNr")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ArtNrManufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CareInstruction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CartonPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Cartons10Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CatNrManufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CatalogNr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CatalogPageCorporateWear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CatalogPagePromotion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CatalogPageSportsWear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CatalogPageTexStyles")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CollarNeckline")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Collections")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Colourfulness")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Consistence")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryOfOrigin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cutting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details_Bags")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details_Blanket")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details_Blouses")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details_Bonnet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details_Buttons")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details_CapLock")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details_CapSpecial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details_CapType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details_Caps")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details_Glove")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details_Hats")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details_Jackets")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details_Pillow")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details_Pinafore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details_PoloShirts")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details_Pullover")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details_Saleshelper")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details_Scarfs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details_Shirt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details_Shoes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details_Skirts")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details_Socks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details_StuffedAnimals")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details_SweatshirtsJackets")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details_TShirts")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details_Ties")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details_Towels")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details_Trousers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details_UmbrellaHandle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details_Umbrellas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details_Underwear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details_Vests")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Discontinued")
                        .HasColumnType("bit");

                    b.Property<string>("EAN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("EK")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Function")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Grammage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HexCol1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HexCol2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HexCol3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HexCol4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Improving")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Legs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LongDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MakingCachet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Material")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mixture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NewDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Partner_Article")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QtyCarton")
                        .HasColumnType("int");

                    b.Property<string>("ShopNavigation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SinglePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sleeve")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TariffNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("VK_100_01")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("VK_100_05")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("VK_100_06")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("VK_119_01")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("VK_119_05")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("VK_119_06")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("VK_120_01")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("VK_120_05")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("VK_120_06")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("VK_121_01")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("VK_121_05")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("VK_121_06")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("VK_BASIS_01")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("VK_BASIS_05")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("VK_BASIS_06")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("VK_PLUS_01")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("VK_PLUS_05")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("VK_PLUS_06")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Workmanship")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ArticleNr");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("WebPreisBerechnungAuB.Models.RangeSurfaceSize", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("RangeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("SurfaceSizeFrom")
                        .HasColumnType("float");

                    b.Property<double>("SurfaceSizeTo")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("RangeSurfaceSizes");
                });

            modelBuilder.Entity("WebPreisBerechnungAuB.Models.RangeTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("RangeFrom")
                        .HasColumnType("int");

                    b.Property<string>("RangeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RangeTo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RangeTable");
                });

            modelBuilder.Entity("WebPreisBerechnungAuB.Models.Textil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("TextilName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Textils");
                });

            modelBuilder.Entity("WebPreisBerechnungAuB.Models.TextilColor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsPriceHigher")
                        .HasColumnType("bit");

                    b.Property<string>("TextilColorName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TextilColors");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("WebPreisBerechnungAuB.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("WebPreisBerechnungAuB.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebPreisBerechnungAuB.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("WebPreisBerechnungAuB.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebPreisBerechnungAuB.Models.ExtraChargeList", b =>
                {
                    b.HasOne("WebPreisBerechnungAuB.Models.ExtraCharge", "ExtraCharge")
                        .WithMany()
                        .HasForeignKey("ExtraChargeId");

                    b.HasOne("WebPreisBerechnungAuB.Models.Logo", "Logo")
                        .WithMany()
                        .HasForeignKey("LogoId");

                    b.HasOne("WebPreisBerechnungAuB.Models.PositionLogo", null)
                        .WithMany("ExtraChargeLists")
                        .HasForeignKey("PositionLogoId");

                    b.Navigation("ExtraCharge");

                    b.Navigation("Logo");
                });

            modelBuilder.Entity("WebPreisBerechnungAuB.Models.File", b =>
                {
                    b.HasOne("WebPreisBerechnungAuB.Models.ArticelMain", null)
                        .WithMany("file")
                        .HasForeignKey("ArticelMainId");
                });

            modelBuilder.Entity("WebPreisBerechnungAuB.Models.Logo", b =>
                {
                    b.HasOne("WebPreisBerechnungAuB.Models.Color", "Color")
                        .WithMany()
                        .HasForeignKey("ColorId");

                    b.HasOne("WebPreisBerechnungAuB.Models.File", "File")
                        .WithMany()
                        .HasForeignKey("FileId");

                    b.HasOne("WebPreisBerechnungAuB.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Color");

                    b.Navigation("File");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebPreisBerechnungAuB.Models.Order", b =>
                {
                    b.HasOne("WebPreisBerechnungAuB.Models.TextilColor", "TextilColor")
                        .WithMany()
                        .HasForeignKey("TextilColorId");

                    b.HasOne("WebPreisBerechnungAuB.Models.Textil", "Textil")
                        .WithMany()
                        .HasForeignKey("TextilId");

                    b.Navigation("Textil");

                    b.Navigation("TextilColor");
                });

            modelBuilder.Entity("WebPreisBerechnungAuB.Models.OrderPositionLogo", b =>
                {
                    b.HasOne("WebPreisBerechnungAuB.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId");

                    b.HasOne("WebPreisBerechnungAuB.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Order");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebPreisBerechnungAuB.Models.PositionLogo", b =>
                {
                    b.HasOne("WebPreisBerechnungAuB.Models.Logo", "Logo")
                        .WithMany()
                        .HasForeignKey("LogoId");

                    b.HasOne("WebPreisBerechnungAuB.Models.OrderPositionLogo", "OrderPositionLogo")
                        .WithMany()
                        .HasForeignKey("OrderPositionLogoId");

                    b.HasOne("WebPreisBerechnungAuB.Models.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId");

                    b.Navigation("Logo");

                    b.Navigation("OrderPositionLogo");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("WebPreisBerechnungAuB.Models.PriceTable", b =>
                {
                    b.HasOne("WebPreisBerechnungAuB.Models.Color", "NumberColors")
                        .WithMany()
                        .HasForeignKey("NumberColorsId");

                    b.HasOne("WebPreisBerechnungAuB.Models.RangeTable", "Range")
                        .WithMany()
                        .HasForeignKey("RangeId");

                    b.HasOne("WebPreisBerechnungAuB.Models.Textil", "Texil")
                        .WithMany()
                        .HasForeignKey("TexilId");

                    b.Navigation("NumberColors");

                    b.Navigation("Range");

                    b.Navigation("Texil");
                });

            modelBuilder.Entity("WebPreisBerechnungAuB.Models.PriceTableTransfer", b =>
                {
                    b.HasOne("WebPreisBerechnungAuB.Models.RangeSurfaceSize", "RangeLogo")
                        .WithMany()
                        .HasForeignKey("RangeLogoId");

                    b.HasOne("WebPreisBerechnungAuB.Models.Textil", "Texil")
                        .WithMany()
                        .HasForeignKey("TexilId");

                    b.Navigation("RangeLogo");

                    b.Navigation("Texil");
                });

            modelBuilder.Entity("WebPreisBerechnungAuB.Models.ArticelMain", b =>
                {
                    b.Navigation("file");
                });

            modelBuilder.Entity("WebPreisBerechnungAuB.Models.PositionLogo", b =>
                {
                    b.Navigation("ExtraChargeLists");
                });
#pragma warning restore 612, 618
        }
    }
}
